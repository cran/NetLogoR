% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/patch-functions.R
\name{patchDistDir}
\alias{patchDistDir}
\alias{patchDistDir,worldNLR,matrix,numeric,numeric-method}
\title{\code{Patches} at given distances and directions}
\usage{
patchDistDir(world, agents, dist, angle, torus = FALSE)

\S4method{patchDistDir}{worldNLR,matrix,numeric,numeric}(world, agents, dist, angle, torus = FALSE)
}
\arguments{
\item{world}{\code{WorldMatrix} or \code{worldArray} object.}

\item{agents}{Matrix (\code{ncol} = 2) with the first column \code{pxcor} and the second
column \code{pycor} representing the \code{patches} coordinates, or

\if{html}{\out{<div class="sourceCode">}}\preformatted{          `AgentMatrix` object representing the moving `agents`.
}\if{html}{\out{</div>}}}

\item{dist}{Numeric. Vector of distances from the \code{agents}. Must be
of length 1 or of the same length as the number of \code{agents}.}

\item{angle}{Numeric. Absolute directions from the \code{agents}. \code{angle}
must be of length 1 or of the same length as the number of
\code{agents}. Angles are in degrees with 0 being North.}

\item{torus}{Logical to determine if the \code{world} is wrapped. Default is
\code{torus = FALSE}.}
}
\value{
Matrix (\code{ncol} = 2) with the first column \code{pxcor} and the second column
\code{pycor} representing the coordinates of the \code{patches} at the distances
\code{dist} and directions \code{angle} of \code{agents}.
The order of the \code{patches} follows the order of the \code{agents}.
}
\description{
Report the coordinates of the \code{patches} at the given
distances and directions from the \code{agents}.
}
\details{
If \code{torus = FALSE} and the \code{patch} at distance \code{dist} and
direction \code{angle} of an \code{agent} is outside the \code{world}'s extent,
\code{NA} are returned for the \code{patch} coordinates.
If \code{torus = TRUE}, the \code{patch} coordinates from a wrapped \code{world}
are returned.

\if{html}{\out{<div class="sourceCode">}}\preformatted{     If `agents` are `turtles`, their `headings` are not taken into account;
     the given directions `angle` are used. To find a `patch` at certain
     distance from a `turtle` using the `turtle`'s `heading`, look at `pacthAhead()`,
     `patchLeft()` or `patchRight()`.
}\if{html}{\out{</div>}}
}
\examples{
w1 <- createWorld(minPxcor = 0, maxPxcor = 9, minPycor = 0, maxPycor = 9)
p1 <- patchDistDir(world = w1, agents = patch(w1, 0, 0), dist = 1, angle = 45)
t1 <- createTurtles(n = 1, coords = cbind(xcor = 0, ycor = 0), heading = 315)
p2 <- patchDistDir(world = w1, agents = t1, dist = 1, angle = 45)

}
\references{
Wilensky, U. 1999. NetLogo. \url{https://www.netlogo.org}.
Center for Connected Learning and Computer-Based Modeling,
Northwestern University. Evanston, IL.
}
\seealso{
\url{https://docs.netlogo.org/dictionary.html#patch-at-heading-and-distance}
}
\author{
Sarah Bauduin
}
